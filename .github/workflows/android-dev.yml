name: Android CI - Prod Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - run: chmod +x ./gradlew

      # âœ… Auto-bump versionName in app/build.gradle
      - name: Bump versionName
        id: version_bump
        run: |
          FILE=app/build.gradle
          CURRENT_VERSION=$(grep versionName $FILE | head -1 | awk -F\" '{ print $2 }')
          echo "Current version: $CURRENT_VERSION"

          # Extract major and minor
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)

          # Increment minor version
          NEW_VERSION="$MAJOR.$((MINOR + 1))"
          echo "New version: $NEW_VERSION"

          # Replace in file
          sed -i "s/versionName \"$CURRENT_VERSION\"/versionName \"$NEW_VERSION\"/" $FILE
          echo "version_name=$NEW_VERSION" >> $GITHUB_OUTPUT

      # âœ… Commit updated build.gradle with new versionName
      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app/build.gradle
          git commit -m "ðŸ”– Bump versionName to ${{ steps.version_bump.outputs.version_name }}"
          git push origin main

      # âœ… Generate versionCode from commit count
      - name: Generate versionCode
        id: versioncode
        run: |
          VERSION_CODE=$(git rev-list --count HEAD)
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      # âœ… Build APK with injected versionCode
      - name: Build APK
        run: ./gradlew assembleProdRelease -PVERSION_CODE=${{ steps.versioncode.outputs.version_code }}

      # âœ… Create Git Tag
      - name: Tag & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.version_bump.outputs.version_name }} || true
          git push origin v${{ steps.version_bump.outputs.version_name }} || true

      # âœ… Create GitHub Release
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version_bump.outputs.version_name }}
          name: "Release v${{ steps.version_bump.outputs.version_name }}"
          files: app/build/outputs/apk/dev/release/*.apk
